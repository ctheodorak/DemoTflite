node {
  name: "BoxPredictor_5/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 7.98877048
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -11.3044291
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.127263665
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.158929646
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.3207283
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.17292976
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.115202479
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0885800719
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.3065395
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -28.6317577
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.265034139
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.281454742
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.20204496
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -5.45022297
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.188132346
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125973716
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 18.149826
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -28.6807823
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.331412762
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.525682569
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.2585721
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.75663018
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.334999084
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.316175818
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 30.4113274
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -42.4639893
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.494805455
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.517870605
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.5677247
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -6.82158947
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.306844473
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.227374777
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.4838676
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -72.4606323
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.478542447
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.606784821
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.22341824
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -9.97846889
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.504331946
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.395473927
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 19.182827
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -28.7575302
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.809465826
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.40109158
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 7.47652578
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/act_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/act_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -17.3953838
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/act_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/act_quant/min"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0903523
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/max/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/weights_quant/max"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.10995245
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/min/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.6890353
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.37090731
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.88909483
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.30043876
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.661707
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.834736049
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.965981364
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.770679
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.306981236
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.167513683
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.612725437
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.764148891
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99849129
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.29442066
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.278245568
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.435497344
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.556642294
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.616210043
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.418708
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.351627976
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.284257114
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 17.221571
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -19.6936417
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.42989397
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.362350076
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 7.56826973
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.06660247
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0993625149
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.110014148
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.05595207
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.9325242
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.185982585
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.245274976
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.74844885
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -8.59649563
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.329809695
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.484010875
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 11.4323683
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -11.1686792
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.424039036
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.563163936
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 35.5585594
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -18.6406841
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.148850456
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.161015525
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.54674911
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -5.27019644
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.134290129
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.107692637
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.69482803
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -5.4722209
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.225216731
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.300102562
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 18.3075943
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -20.2801743
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.683820605
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.08403111
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 6.68883371
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4.53975964
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.123455778
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.113868617
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.39263868
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -4.52589
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.28741461
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.223819971
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.65601778
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -2.57385159
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.357503414
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.308487684
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.78766775
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -5.50680971
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.176597208
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.264305
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 17.8764267
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -20.7560577
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.878641427
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.879152477
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.60589409
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.67677987
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.152329355
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14724429
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.81833673
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.37856364
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.159996435
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.120586783
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.66413116
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.43071675
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.179203898
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.172915399
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 24.4249935
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -23.5580196
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0148294
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0984509
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.12434554
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -2.33660054
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1796581
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.17284669
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.58447695
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -9.65354061
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.244443893
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.255944878
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 25.5611668
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -26.276535
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.72696888
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.43777406
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.50171
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -2.85152888
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.617363036
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.610063732
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 22.4782887
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -26.7132702
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.69721758
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73931742
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 94.6466446
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -54.7516556
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.99976158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.7654469
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.1978035
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 34.9845085
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -29.2330627
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 21.399786
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -20.68853
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.960650444
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.95856446
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 17.3291397
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -17.0481548
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.9011173
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -11.2767801
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.559594274
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.629609942
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 54.957634
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -51.3681145
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 41.071373
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -42.4063187
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.71761394
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.76955569
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 33.1185913
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -28.0017586
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 37.1466255
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -22.424099
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.83299196
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.909500062
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.2363968
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -33.3980255
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.4958935
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -21.95751
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.35905385
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.90911555
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 26.4934158
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -27.6350918
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.5509186
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -17.3339443
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.26553893
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.1339587
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 22.5527363
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -23.9925671
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.1953831
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -16.0739307
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.760692894
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.653045416
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 41.030098
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -39.484333
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 25.0811024
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -30.5330544
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.09446883
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.78660977
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 31.3157978
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -30.3103867
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 29.3008366
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -19.7705383
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.39275873
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.16555226
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.7077827
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -43.8018723
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 36.1794739
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -43.1087151
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.88764143
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/max/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/max"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9542017
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/min/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/min"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/scale_reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_1"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/Cast_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 600
      }
    }
  }
}
node {
  name: "Postprocessor/Cast_3"
  op: "Cast"
  input: "Postprocessor/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 600
      }
    }
  }
}
node {
  name: "Postprocessor/Cast_2"
  op: "Cast"
  input: "Postprocessor/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/scale_logits/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/stack/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/ClassPredictor/weights/read"
  input: "BoxPredictor_5/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_5/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/ClassPredictor/weights/read"
  input: "BoxPredictor_4/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_4/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/ClassPredictor/weights/read"
  input: "BoxPredictor_3/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_3/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/ClassPredictor/weights/read"
  input: "BoxPredictor_2/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_2/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
          dim {
            size: 35
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/ClassPredictor/weights/read"
  input: "BoxPredictor_1/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_1/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
          dim {
            size: 28
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/ClassPredictor/weights/read"
  input: "BoxPredictor_0/ClassPredictor/weights_quant/min/read"
  input: "BoxPredictor_0/ClassPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights/read"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/min/read"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "Concatenate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (MultipleGridAnchorGenerator/add_23:0) = "
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (MultipleGridAnchorGenerator/assert_equal_1/x:0) = "
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7825
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_5"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape_5"
  input: "MultipleGridAnchorGenerator/strided_slice_5/stack"
  input: "MultipleGridAnchorGenerator/strided_slice_5/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_4"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape_4"
  input: "MultipleGridAnchorGenerator/strided_slice_4/stack"
  input: "MultipleGridAnchorGenerator/strided_slice_4/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_3"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape_3"
  input: "MultipleGridAnchorGenerator/strided_slice_3/stack"
  input: "MultipleGridAnchorGenerator/strided_slice_3/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_2"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape_2"
  input: "MultipleGridAnchorGenerator/strided_slice_2/stack"
  input: "MultipleGridAnchorGenerator/strided_slice_2/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice_1"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape_1"
  input: "MultipleGridAnchorGenerator/strided_slice_1/stack"
  input: "MultipleGridAnchorGenerator/strided_slice_1/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/strided_slice"
  op: "StridedSlice"
  input: "MultipleGridAnchorGenerator/Shape"
  input: "MultipleGridAnchorGenerator/strided_slice/stack"
  input: "MultipleGridAnchorGenerator/strided_slice/stack_1"
  input: "MultipleGridAnchorGenerator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_18"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_18/x"
  input: "MultipleGridAnchorGenerator/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_19"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_18"
  input: "MultipleGridAnchorGenerator/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_20"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_19"
  input: "MultipleGridAnchorGenerator/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_21"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_20"
  input: "MultipleGridAnchorGenerator/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_22"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_21"
  input: "MultipleGridAnchorGenerator/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_23"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/add_22"
  input: "MultipleGridAnchorGenerator/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Equal"
  op: "Equal"
  input: "MultipleGridAnchorGenerator/assert_equal_1/x"
  input: "MultipleGridAnchorGenerator/add_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/All"
  op: "All"
  input: "MultipleGridAnchorGenerator/assert_equal_1/Equal"
  input: "MultipleGridAnchorGenerator/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "MultipleGridAnchorGenerator/assert_equal_1/All"
  input: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_0"
  input: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_1"
  input: "MultipleGridAnchorGenerator/assert_equal_1/x"
  input: "MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert/data_3"
  input: "MultipleGridAnchorGenerator/add_23"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_5/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_11/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_11/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_11/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_11"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_11/start"
  input: "MultipleGridAnchorGenerator/range_11/limit"
  input: "MultipleGridAnchorGenerator/range_11/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_25"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_11"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_10/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_10/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_10/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_10"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_10/start"
  input: "MultipleGridAnchorGenerator/range_10/limit"
  input: "MultipleGridAnchorGenerator/range_10/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_24"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_10"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_55/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_19/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_5"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt_5/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_55"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_55/x"
  input: "MultipleGridAnchorGenerator/Sqrt_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_19"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_19/x"
  input: "MultipleGridAnchorGenerator/Sqrt_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_4/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_52/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_51/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_9/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_9/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_9/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_9"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_9/start"
  input: "MultipleGridAnchorGenerator/range_9/limit"
  input: "MultipleGridAnchorGenerator/range_9/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_23"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_9"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_8/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_8/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_8/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_8"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_8/start"
  input: "MultipleGridAnchorGenerator/range_8/limit"
  input: "MultipleGridAnchorGenerator/range_8/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_22"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_4"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt_4/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_47"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_47/x"
  input: "MultipleGridAnchorGenerator/Sqrt_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_18"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_18/x"
  input: "MultipleGridAnchorGenerator/Sqrt_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_44/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_43/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_7/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_7/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_7/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_7"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_7/start"
  input: "MultipleGridAnchorGenerator/range_7/limit"
  input: "MultipleGridAnchorGenerator/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_21"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_6/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_6/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_6/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_6"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_6/start"
  input: "MultipleGridAnchorGenerator/range_6/limit"
  input: "MultipleGridAnchorGenerator/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_20"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_39/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_3"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_39"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_39/x"
  input: "MultipleGridAnchorGenerator/Sqrt_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_17"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_17/x"
  input: "MultipleGridAnchorGenerator/Sqrt_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_5/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_5/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_5/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_5"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_5/start"
  input: "MultipleGridAnchorGenerator/range_5/limit"
  input: "MultipleGridAnchorGenerator/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_19"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_4/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_4/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_4/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_4"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_4/start"
  input: "MultipleGridAnchorGenerator/range_4/limit"
  input: "MultipleGridAnchorGenerator/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_18"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_31/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_16/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_2"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_31"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_31/x"
  input: "MultipleGridAnchorGenerator/Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_16"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_16/x"
  input: "MultipleGridAnchorGenerator/Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_28/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_27/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_3/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_3/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_3/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_3"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_3/start"
  input: "MultipleGridAnchorGenerator/range_3/limit"
  input: "MultipleGridAnchorGenerator/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_17"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_2/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_2"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_2/start"
  input: "MultipleGridAnchorGenerator/range_2/limit"
  input: "MultipleGridAnchorGenerator/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_16"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt_1"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_23"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_23/x"
  input: "MultipleGridAnchorGenerator/Sqrt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_15"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_15/x"
  input: "MultipleGridAnchorGenerator/Sqrt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_19/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/Rank_2"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid/Rank_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/Shape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims"
  op: "ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims/input"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/Rank"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ones"
  op: "Fill"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice_1"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice"
  op: "Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/Shape"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice/begin"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ExpandDims"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/ones"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/Slice_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range_1"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range_1/start"
  input: "MultipleGridAnchorGenerator/range_1/limit"
  input: "MultipleGridAnchorGenerator/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_15"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/range"
  op: "Range"
  input: "MultipleGridAnchorGenerator/range/start"
  input: "MultipleGridAnchorGenerator/range/limit"
  input: "MultipleGridAnchorGenerator/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_14"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/range"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Sqrt"
  op: "Sqrt"
  input: "MultipleGridAnchorGenerator/Sqrt/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_15"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_15/x"
  input: "MultipleGridAnchorGenerator/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_14"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_14/x"
  input: "MultipleGridAnchorGenerator/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_13/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_13"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_13/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_11"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_11/x"
  input: "MultipleGridAnchorGenerator/Cast_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_58"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_25"
  input: "MultipleGridAnchorGenerator/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_11"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_11/x"
  input: "MultipleGridAnchorGenerator/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_16"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_58"
  input: "MultipleGridAnchorGenerator/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_16"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_12"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_12/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_10"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_10/x"
  input: "MultipleGridAnchorGenerator/Cast_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_57"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_24"
  input: "MultipleGridAnchorGenerator/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_10"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_10/x"
  input: "MultipleGridAnchorGenerator/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_15"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_57"
  input: "MultipleGridAnchorGenerator/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_15"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_15/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_15/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_10"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_10"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_10"
  input: "MultipleGridAnchorGenerator/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_11"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_11/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_9"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_9/x"
  input: "MultipleGridAnchorGenerator/Cast_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_50"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_23"
  input: "MultipleGridAnchorGenerator/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_9"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_9/x"
  input: "MultipleGridAnchorGenerator/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_13"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_50"
  input: "MultipleGridAnchorGenerator/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_13"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_10"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_10/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_8"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_8/x"
  input: "MultipleGridAnchorGenerator/Cast_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_49"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_22"
  input: "MultipleGridAnchorGenerator/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_8"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_8/x"
  input: "MultipleGridAnchorGenerator/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_12"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_49"
  input: "MultipleGridAnchorGenerator/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_12"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_12/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_12/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_8"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_8"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_8"
  input: "MultipleGridAnchorGenerator/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_9"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_9/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_7"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_7/x"
  input: "MultipleGridAnchorGenerator/Cast_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_42"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_21"
  input: "MultipleGridAnchorGenerator/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_7"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_7/x"
  input: "MultipleGridAnchorGenerator/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_10"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_42"
  input: "MultipleGridAnchorGenerator/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_10"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_8"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_8/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_6"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_6/x"
  input: "MultipleGridAnchorGenerator/Cast_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_41"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_20"
  input: "MultipleGridAnchorGenerator/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_6"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_6/x"
  input: "MultipleGridAnchorGenerator/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_9"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_41"
  input: "MultipleGridAnchorGenerator/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_9"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_9/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_9/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_6"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_6"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_6"
  input: "MultipleGridAnchorGenerator/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_7"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_7/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_5"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_5/x"
  input: "MultipleGridAnchorGenerator/Cast_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_34"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_19"
  input: "MultipleGridAnchorGenerator/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_5"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_5/x"
  input: "MultipleGridAnchorGenerator/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_7"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_34"
  input: "MultipleGridAnchorGenerator/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_7"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_6"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_6/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_4"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_4/x"
  input: "MultipleGridAnchorGenerator/Cast_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_33"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_18"
  input: "MultipleGridAnchorGenerator/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_4"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_4/x"
  input: "MultipleGridAnchorGenerator/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_6"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_33"
  input: "MultipleGridAnchorGenerator/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_6"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_6/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_6/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_4"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_4"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_4"
  input: "MultipleGridAnchorGenerator/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_5"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_5/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_3"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_3/x"
  input: "MultipleGridAnchorGenerator/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_26"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_17"
  input: "MultipleGridAnchorGenerator/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_3"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_3/x"
  input: "MultipleGridAnchorGenerator/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_4"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_26"
  input: "MultipleGridAnchorGenerator/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_4"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_4"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_4/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_2"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_2/x"
  input: "MultipleGridAnchorGenerator/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_25"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_16"
  input: "MultipleGridAnchorGenerator/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_2"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_2/x"
  input: "MultipleGridAnchorGenerator/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_3"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_25"
  input: "MultipleGridAnchorGenerator/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_3"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_3/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_3/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_2"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_2"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_2"
  input: "MultipleGridAnchorGenerator/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_3"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_1"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv_1/x"
  input: "MultipleGridAnchorGenerator/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_18"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_15"
  input: "MultipleGridAnchorGenerator/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_1"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_1/x"
  input: "MultipleGridAnchorGenerator/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_1"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_18"
  input: "MultipleGridAnchorGenerator/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_2"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/truediv/x"
  input: "MultipleGridAnchorGenerator/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_17"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/Cast_14"
  input: "MultipleGridAnchorGenerator/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul/x"
  input: "MultipleGridAnchorGenerator/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/mul_17"
  input: "MultipleGridAnchorGenerator/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/add"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Tile_1"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Reshape_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Tile_1"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Tile_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack"
  input: "MultipleGridAnchorGenerator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 600
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast_1"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 600
      }
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Cast"
  op: "Cast"
  input: "MultipleGridAnchorGenerator/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Minimum"
  op: "Minimum"
  input: "MultipleGridAnchorGenerator/Cast"
  input: "MultipleGridAnchorGenerator/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_13"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/Minimum"
  input: "MultipleGridAnchorGenerator/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_13"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_13"
  input: "MultipleGridAnchorGenerator/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_56"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_55"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_56"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_16/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_48"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_47"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_48"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_13/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_40"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_39"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_40"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_10/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_32"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_31"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_32"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_7/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_24"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_23"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_24"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_4/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_16"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_15"
  input: "MultipleGridAnchorGenerator/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_16"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_1/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/truediv_12"
  op: "RealDiv"
  input: "MultipleGridAnchorGenerator/Minimum"
  input: "MultipleGridAnchorGenerator/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_12"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_12"
  input: "MultipleGridAnchorGenerator/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_54"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_19"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_54"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_17/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_11"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_17/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_16/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_11"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_11"
  input: "MultipleGridAnchorGenerator/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_60"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_60/x"
  input: "MultipleGridAnchorGenerator/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_17"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape_10"
  input: "MultipleGridAnchorGenerator/mul_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_59"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_59/x"
  input: "MultipleGridAnchorGenerator/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub_5"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape_10"
  input: "MultipleGridAnchorGenerator/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_5"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub_5"
  input: "MultipleGridAnchorGenerator/add_17"
  input: "MultipleGridAnchorGenerator/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity_5"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat_5"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_46"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_18"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_46"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_14/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_9"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_14/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_13/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_9"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_9"
  input: "MultipleGridAnchorGenerator/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_52"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_52/x"
  input: "MultipleGridAnchorGenerator/Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_14"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape_8"
  input: "MultipleGridAnchorGenerator/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_51"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_51/x"
  input: "MultipleGridAnchorGenerator/Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub_4"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape_8"
  input: "MultipleGridAnchorGenerator/mul_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_4"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub_4"
  input: "MultipleGridAnchorGenerator/add_14"
  input: "MultipleGridAnchorGenerator/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity_4"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat_4"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_38"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_17"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_38"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_11/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_7"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_11/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_10/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_7"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_7"
  input: "MultipleGridAnchorGenerator/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_44"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_44/x"
  input: "MultipleGridAnchorGenerator/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_11"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape_6"
  input: "MultipleGridAnchorGenerator/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_43"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_43/x"
  input: "MultipleGridAnchorGenerator/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub_3"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape_6"
  input: "MultipleGridAnchorGenerator/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_3"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub_3"
  input: "MultipleGridAnchorGenerator/add_11"
  input: "MultipleGridAnchorGenerator/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity_3"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat_3"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_30"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_16"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_30"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_8/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_5"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_8/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_7/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_5"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_5"
  input: "MultipleGridAnchorGenerator/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_36"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_36/x"
  input: "MultipleGridAnchorGenerator/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_8"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape_4"
  input: "MultipleGridAnchorGenerator/mul_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_35"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_35/x"
  input: "MultipleGridAnchorGenerator/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub_2"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape_4"
  input: "MultipleGridAnchorGenerator/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_2"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub_2"
  input: "MultipleGridAnchorGenerator/add_8"
  input: "MultipleGridAnchorGenerator/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity_2"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat_2"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_22"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_15"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_22"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_5/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_3"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_5/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_4/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_3"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_3"
  input: "MultipleGridAnchorGenerator/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_28"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_28/x"
  input: "MultipleGridAnchorGenerator/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_5"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape_2"
  input: "MultipleGridAnchorGenerator/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_27"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_27/x"
  input: "MultipleGridAnchorGenerator/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub_1"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape_2"
  input: "MultipleGridAnchorGenerator/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat_1"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub_1"
  input: "MultipleGridAnchorGenerator/add_5"
  input: "MultipleGridAnchorGenerator/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity_1"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat_1"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_14"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/truediv_14"
  input: "MultipleGridAnchorGenerator/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Reshape"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/mul_14"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Meshgrid_2/Tile"
  op: "Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Reshape"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/ExpandedShape_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/stack_1"
  op: "Pack"
  input: "MultipleGridAnchorGenerator/Meshgrid_2/Tile"
  input: "MultipleGridAnchorGenerator/Meshgrid_1/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Reshape_1"
  op: "Reshape"
  input: "MultipleGridAnchorGenerator/stack_1"
  input: "MultipleGridAnchorGenerator/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_20"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_20/x"
  input: "MultipleGridAnchorGenerator/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/add_2"
  op: "AddV2"
  input: "MultipleGridAnchorGenerator/Reshape"
  input: "MultipleGridAnchorGenerator/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/mul_19"
  op: "Mul"
  input: "MultipleGridAnchorGenerator/mul_19/x"
  input: "MultipleGridAnchorGenerator/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/sub"
  op: "Sub"
  input: "MultipleGridAnchorGenerator/Reshape"
  input: "MultipleGridAnchorGenerator/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/sub"
  input: "MultipleGridAnchorGenerator/add_2"
  input: "MultipleGridAnchorGenerator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultipleGridAnchorGenerator/Identity"
  op: "Identity"
  input: "MultipleGridAnchorGenerator/concat"
  input: "^MultipleGridAnchorGenerator/assert_equal_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Concatenate/concat"
  op: "ConcatV2"
  input: "MultipleGridAnchorGenerator/Identity"
  input: "MultipleGridAnchorGenerator/Identity_1"
  input: "MultipleGridAnchorGenerator/Identity_2"
  input: "MultipleGridAnchorGenerator/Identity_3"
  input: "MultipleGridAnchorGenerator/Identity_4"
  input: "MultipleGridAnchorGenerator/Identity_5"
  input: "Concatenate/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/ExpandDims"
  op: "ExpandDims"
  input: "Concatenate/concat"
  input: "Postprocessor/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/mul_fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 320
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/Conv_1/mul_fold"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/scale_reshape"
  op: "Reshape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/scale_reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/scale_reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/mul_fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_variance/read"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/Rsqrt"
  op: "Rsqrt"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/bias"
  op: "Sub"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV2/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/mul_fold"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV2/Conv/weights/read"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/weights_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/Conv/mul_fold"
  input: "FeatureExtractor/MobilenetV2/Conv/weights_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/Conv/weights_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: true
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "Preprocessor/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00784313772
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Enter"
  op: "Enter"
  input: "Preprocessor/map/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Merge"
  op: "Merge"
  input: "Preprocessor/map/while/Enter"
  input: "Preprocessor/map/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Enter_1"
  op: "Enter"
  input: "Preprocessor/map/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Merge_1"
  op: "Merge"
  input: "Preprocessor/map/while/Enter_1"
  input: "Preprocessor/map/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "image_tensor"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "image_tensor"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Preprocessor/map/TensorArrayUnstack/Shape"
  input: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack"
  input: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack_1"
  input: "Preprocessor/map/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/range"
  op: "Range"
  input: "Preprocessor/map/TensorArrayUnstack/range/start"
  input: "Preprocessor/map/TensorArrayUnstack/strided_slice"
  input: "Preprocessor/map/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/Shape"
  op: "Shape"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/strided_slice"
  op: "StridedSlice"
  input: "Preprocessor/map/Shape"
  input: "Preprocessor/map/strided_slice/stack"
  input: "Preprocessor/map/strided_slice/stack_1"
  input: "Preprocessor/map/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Preprocessor/map/while/Less/Enter"
  op: "Enter"
  input: "Preprocessor/map/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Less_1"
  op: "Less"
  input: "Preprocessor/map/while/Merge_1"
  input: "Preprocessor/map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/Less"
  op: "Less"
  input: "Preprocessor/map/while/Merge"
  input: "Preprocessor/map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "Preprocessor/map/while/Less"
  input: "Preprocessor/map/while/Less_1"
}
node {
  name: "Preprocessor/map/while/LoopCond"
  op: "LoopCond"
  input: "Preprocessor/map/while/LogicalAnd"
}
node {
  name: "Preprocessor/map/while/Switch_1"
  op: "Switch"
  input: "Preprocessor/map/while/Merge_1"
  input: "Preprocessor/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/Merge_1"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Identity_1"
  op: "Identity"
  input: "Preprocessor/map/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/Switch"
  op: "Switch"
  input: "Preprocessor/map/while/Merge"
  input: "Preprocessor/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/Merge"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Identity"
  op: "Identity"
  input: "Preprocessor/map/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/add_1/y"
  op: "Const"
  input: "^Preprocessor/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/add_1"
  op: "AddV2"
  input: "Preprocessor/map/while/Identity_1"
  input: "Preprocessor/map/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/NextIteration_1"
  op: "NextIteration"
  input: "Preprocessor/map/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/stack_1"
  op: "Const"
  input: "^Preprocessor/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/resize/ExpandDims/dim"
  op: "Const"
  input: "^Preprocessor/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/stack"
  op: "Const"
  input: "^Preprocessor/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/add/y"
  op: "Const"
  input: "^Preprocessor/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/add"
  op: "AddV2"
  input: "Preprocessor/map/while/Identity"
  input: "Preprocessor/map/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/NextIteration"
  op: "NextIteration"
  input: "Preprocessor/map/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/TensorArray_2"
  op: "TensorArrayV3"
  input: "Preprocessor/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Preprocessor/map/TensorArray_2"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/ResizeImage/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Enter_3"
  op: "Enter"
  input: "Preprocessor/map/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Merge_3"
  op: "Merge"
  input: "Preprocessor/map/while/Enter_3"
  input: "Preprocessor/map/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/while/Switch_3"
  op: "Switch"
  input: "Preprocessor/map/while/Merge_3"
  input: "Preprocessor/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/Merge_3"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Exit_3"
  op: "Exit"
  input: "Preprocessor/map/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Preprocessor/map/TensorArray_2"
  input: "Preprocessor/map/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_2"
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack_1/range"
  op: "Range"
  input: "Preprocessor/map/TensorArrayStack_1/range/start"
  input: "Preprocessor/map/TensorArrayStack_1/TensorArraySizeV3"
  input: "Preprocessor/map/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_2"
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Preprocessor/map/TensorArray_2"
  input: "Preprocessor/map/TensorArrayStack_1/range"
  input: "Preprocessor/map/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Postprocessor/Cast_1"
  op: "Cast"
  input: "Preprocessor/map/TensorArrayStack_1/TensorArrayGatherV3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/unstack"
  op: "Unpack"
  input: "Postprocessor/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Postprocessor/truediv_1"
  op: "RealDiv"
  input: "Postprocessor/unstack:1"
  input: "Postprocessor/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/truediv"
  op: "RealDiv"
  input: "Postprocessor/unstack"
  input: "Postprocessor/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/zeros_like_1"
  op: "ZerosLike"
  input: "Postprocessor/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/zeros_like"
  op: "ZerosLike"
  input: "Postprocessor/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/stack_1"
  op: "Pack"
  input: "Postprocessor/zeros_like"
  input: "Postprocessor/zeros_like_1"
  input: "Postprocessor/truediv"
  input: "Postprocessor/truediv_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/Shape"
  op: "Shape"
  input: "Postprocessor/stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/Identity_3"
  op: "Identity"
  input: "Preprocessor/map/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Preprocessor/map/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "Preprocessor/map/while/Identity_1"
  input: "Preprocessor/map/while/ResizeImage/stack_1"
  input: "Preprocessor/map/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/ResizeImage/stack_1"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/NextIteration_3"
  op: "NextIteration"
  input: "Preprocessor/map/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/TensorArray_1"
  op: "TensorArrayV3"
  input: "Preprocessor/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Preprocessor/map/TensorArray_1"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/ResizeImage/resize/Squeeze"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Enter_2"
  op: "Enter"
  input: "Preprocessor/map/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/Merge_2"
  op: "Merge"
  input: "Preprocessor/map/while/Enter_2"
  input: "Preprocessor/map/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/while/Switch_2"
  op: "Switch"
  input: "Preprocessor/map/while/Merge_2"
  input: "Preprocessor/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/Merge_2"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/Exit_2"
  op: "Exit"
  input: "Preprocessor/map/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Preprocessor/map/TensorArray_1"
  input: "Preprocessor/map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_1"
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack/range"
  op: "Range"
  input: "Preprocessor/map/TensorArrayStack/range/start"
  input: "Preprocessor/map/TensorArrayStack/TensorArraySizeV3"
  input: "Preprocessor/map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_1"
      }
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Preprocessor/map/TensorArray_1"
  input: "Preprocessor/map/TensorArrayStack/range"
  input: "Preprocessor/map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/TensorArray_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 600
        }
        dim {
          size: 600
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Preprocessor/mul"
  op: "Mul"
  input: "Preprocessor/mul/x"
  input: "Preprocessor/map/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/sub"
  op: "Sub"
  input: "Preprocessor/mul"
  input: "Preprocessor/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/MobilenetV2/input"
  op: "Identity"
  input: "Preprocessor/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/MobilenetV2/input"
  input: "FeatureExtractor/MobilenetV2/Conv/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/Conv/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/Conv/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/Conv/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/Conv/Relu6"
  input: "FeatureExtractor/MobilenetV2/Conv/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/Conv/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/Conv/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_1/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_1/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_2/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_2/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_3/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_3/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_4/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_4/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_5/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_5/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_6/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_6/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_7/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_7/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_8/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_8/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_9/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_9/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_10/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_10/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_11/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_11/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_12/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_12/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_13/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_14/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_14/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/project/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_15/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/post_activation_bypass_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_15/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/input"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expand/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_Fold"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/expansion_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/depthwise_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/depthwise_output"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/expanded_conv_16/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/project/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_16/output"
  input: "FeatureExtractor/MobilenetV2/Conv_1/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/Conv_1/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/Conv_1/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/Conv_1/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_2_1x1_256/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_3_1x1_128/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_4_1x1_128/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Conv2D_Fold"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_1_Conv2d_5_1x1_64/act_quant/FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/add_fold"
  op: "Add"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Conv2D_Fold"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/BatchNorm_Fold/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/add_fold"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/min/read"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_5/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_5/Shape_1"
  input: "BoxPredictor_5/strided_slice_1/stack"
  input: "BoxPredictor_5/strided_slice_1/stack_1"
  input: "BoxPredictor_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_5/strided_slice_1"
  input: "BoxPredictor_5/Reshape_1/shape/1"
  input: "BoxPredictor_5/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_5/ClassPredictor/Conv2D"
  input: "BoxPredictor_5/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/ClassPredictor/BiasAdd"
  input: "BoxPredictor_5/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_5/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_5/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_5/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_5/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_5/Shape"
  input: "BoxPredictor_5/strided_slice/stack"
  input: "BoxPredictor_5/strided_slice/stack_1"
  input: "BoxPredictor_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_5/strided_slice"
  input: "BoxPredictor_5/Reshape/shape/1"
  input: "BoxPredictor_5/Reshape/shape/2"
  input: "BoxPredictor_5/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_5_3x3_s2_128/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_5/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_5/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_5/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape"
  op: "Reshape"
  input: "BoxPredictor_5/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_4/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_4/Shape_1"
  input: "BoxPredictor_4/strided_slice_1/stack"
  input: "BoxPredictor_4/strided_slice_1/stack_1"
  input: "BoxPredictor_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_4/strided_slice_1"
  input: "BoxPredictor_4/Reshape_1/shape/1"
  input: "BoxPredictor_4/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_4/ClassPredictor/Conv2D"
  input: "BoxPredictor_4/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/ClassPredictor/BiasAdd"
  input: "BoxPredictor_4/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_4/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_4/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_4/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_4/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_4/Shape"
  input: "BoxPredictor_4/strided_slice/stack"
  input: "BoxPredictor_4/strided_slice/stack_1"
  input: "BoxPredictor_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_4/strided_slice"
  input: "BoxPredictor_4/Reshape/shape/1"
  input: "BoxPredictor_4/Reshape/shape/2"
  input: "BoxPredictor_4/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_4_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_4/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_4/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_4/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape"
  op: "Reshape"
  input: "BoxPredictor_4/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_3/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_3/Shape_1"
  input: "BoxPredictor_3/strided_slice_1/stack"
  input: "BoxPredictor_3/strided_slice_1/stack_1"
  input: "BoxPredictor_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_3/strided_slice_1"
  input: "BoxPredictor_3/Reshape_1/shape/1"
  input: "BoxPredictor_3/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_3/ClassPredictor/Conv2D"
  input: "BoxPredictor_3/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/ClassPredictor/BiasAdd"
  input: "BoxPredictor_3/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_3/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_3/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_3/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_3/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_3/Shape"
  input: "BoxPredictor_3/strided_slice/stack"
  input: "BoxPredictor_3/strided_slice/stack_1"
  input: "BoxPredictor_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_3/strided_slice"
  input: "BoxPredictor_3/Reshape/shape/1"
  input: "BoxPredictor_3/Reshape/shape/2"
  input: "BoxPredictor_3/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_3_3x3_s2_256/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_3/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_3/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_3/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape"
  op: "Reshape"
  input: "BoxPredictor_3/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_2/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_2/Shape_1"
  input: "BoxPredictor_2/strided_slice_1/stack"
  input: "BoxPredictor_2/strided_slice_1/stack_1"
  input: "BoxPredictor_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_2/strided_slice_1"
  input: "BoxPredictor_2/Reshape_1/shape/1"
  input: "BoxPredictor_2/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_2/ClassPredictor/Conv2D"
  input: "BoxPredictor_2/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/ClassPredictor/BiasAdd"
  input: "BoxPredictor_2/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_2/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_2/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_2/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_2/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_2/Shape"
  input: "BoxPredictor_2/strided_slice/stack"
  input: "BoxPredictor_2/strided_slice/stack_1"
  input: "BoxPredictor_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_2/strided_slice"
  input: "BoxPredictor_2/Reshape/shape/1"
  input: "BoxPredictor_2/Reshape/shape/2"
  input: "BoxPredictor_2/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/layer_19_2_Conv2d_2_3x3_s2_512/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_2/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_2/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_2/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape"
  op: "Reshape"
  input: "BoxPredictor_2/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_1/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_1/Shape_1"
  input: "BoxPredictor_1/strided_slice_1/stack"
  input: "BoxPredictor_1/strided_slice_1/stack_1"
  input: "BoxPredictor_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_1/strided_slice_1"
  input: "BoxPredictor_1/Reshape_1/shape/1"
  input: "BoxPredictor_1/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_1/ClassPredictor/Conv2D"
  input: "BoxPredictor_1/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/ClassPredictor/BiasAdd"
  input: "BoxPredictor_1/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_1/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_1/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_1/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_1/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_1/Shape"
  input: "BoxPredictor_1/strided_slice/stack"
  input: "BoxPredictor_1/strided_slice/stack_1"
  input: "BoxPredictor_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_1/strided_slice"
  input: "BoxPredictor_1/Reshape/shape/1"
  input: "BoxPredictor_1/Reshape/shape/2"
  input: "BoxPredictor_1/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/Conv_1/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_1/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_1/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_1/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape"
  op: "Reshape"
  input: "BoxPredictor_1/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_0/Shape_1"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice_1"
  op: "StridedSlice"
  input: "BoxPredictor_0/Shape_1"
  input: "BoxPredictor_0/strided_slice_1/stack"
  input: "BoxPredictor_0/strided_slice_1/stack_1"
  input: "BoxPredictor_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1/shape"
  op: "Pack"
  input: "BoxPredictor_0/strided_slice_1"
  input: "BoxPredictor_0/Reshape_1/shape/1"
  input: "BoxPredictor_0/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  input: "BoxPredictor_0/ClassPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_0/ClassPredictor/Conv2D"
  input: "BoxPredictor_0/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/ClassPredictor/BiasAdd"
  input: "BoxPredictor_0/ClassPredictor/act_quant/min/read"
  input: "BoxPredictor_0/ClassPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_0/ClassPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "BoxPredictor_0/Reshape_1"
  input: "BoxPredictor_1/Reshape_1"
  input: "BoxPredictor_2/Reshape_1"
  input: "BoxPredictor_3/Reshape_1"
  input: "BoxPredictor_4/Reshape_1"
  input: "BoxPredictor_5/Reshape_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/scale_logits"
  op: "RealDiv"
  input: "concat_1"
  input: "Postprocessor/scale_logits/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/convert_scores"
  op: "Sigmoid"
  input: "Postprocessor/scale_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "raw_detection_scores"
  op: "Identity"
  input: "Postprocessor/convert_scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/Shape"
  op: "Shape"
  input: "Postprocessor/convert_scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/raw_box_scores"
  op: "Identity"
  input: "Postprocessor/convert_scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Slice"
  op: "Slice"
  input: "Postprocessor/raw_box_scores"
  input: "Postprocessor/Slice/begin"
  input: "Postprocessor/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/Shape"
  op: "Shape"
  input: "Postprocessor/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_0/Shape"
  op: "Shape"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_0/strided_slice"
  op: "StridedSlice"
  input: "BoxPredictor_0/Shape"
  input: "BoxPredictor_0/strided_slice/stack"
  input: "BoxPredictor_0/strided_slice/stack_1"
  input: "BoxPredictor_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape/shape"
  op: "Pack"
  input: "BoxPredictor_0/strided_slice"
  input: "BoxPredictor_0/Reshape/shape/1"
  input: "BoxPredictor_0/Reshape/shape/2"
  input: "BoxPredictor_0/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV2/expanded_conv_13/expansion_output"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights_quant/FakeQuantWithMinMaxVars"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_0/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  op: "FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_0/BoxEncodingPredictor/act_quant/min/read"
  input: "BoxPredictor_0/BoxEncodingPredictor/act_quant/max/read"
  attr {
    key: "narrow_range"
    value {
      b: false
    }
  }
  attr {
    key: "num_bits"
    value {
      i: 8
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape"
  op: "Reshape"
  input: "BoxPredictor_0/BoxEncodingPredictor/act_quant/FakeQuantWithMinMaxVars"
  input: "BoxPredictor_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "BoxPredictor_0/Reshape"
  input: "BoxPredictor_1/Reshape"
  input: "BoxPredictor_2/Reshape"
  input: "BoxPredictor_3/Reshape"
  input: "BoxPredictor_4/Reshape"
  input: "BoxPredictor_5/Reshape"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "Postprocessor/raw_box_encodings"
  op: "Identity"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Reshape_1"
  op: "Reshape"
  input: "Postprocessor/raw_box_encodings"
  input: "Postprocessor/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Decode/transpose"
  op: "Transpose"
  input: "Postprocessor/Reshape_1"
  input: "Postprocessor/Decode/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Decode/unstack"
  op: "Unpack"
  input: "Postprocessor/Decode/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_3"
  op: "RealDiv"
  input: "Postprocessor/Decode/unstack:3"
  input: "Postprocessor/Decode/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/Exp"
  op: "Exp"
  input: "Postprocessor/Decode/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_2"
  op: "RealDiv"
  input: "Postprocessor/Decode/unstack:2"
  input: "Postprocessor/Decode/truediv_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/Exp_1"
  op: "Exp"
  input: "Postprocessor/Decode/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_1"
  op: "RealDiv"
  input: "Postprocessor/Decode/unstack:1"
  input: "Postprocessor/Decode/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv"
  op: "RealDiv"
  input: "Postprocessor/Decode/unstack"
  input: "Postprocessor/Decode/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Shape"
  op: "Shape"
  input: "Postprocessor/raw_box_encodings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/strided_slice_1"
  op: "StridedSlice"
  input: "Postprocessor/Shape"
  input: "Postprocessor/strided_slice_1/stack"
  input: "Postprocessor/strided_slice_1/stack_1"
  input: "Postprocessor/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/Shape"
  input: "Postprocessor/strided_slice/stack"
  input: "Postprocessor/strided_slice/stack_1"
  input: "Postprocessor/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/stack"
  op: "Pack"
  input: "Postprocessor/strided_slice"
  input: "Postprocessor/strided_slice_1"
  input: "Postprocessor/stack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/Tile/multiples"
  op: "Pack"
  input: "Postprocessor/strided_slice"
  input: "Postprocessor/Tile/multiples/1"
  input: "Postprocessor/Tile/multiples/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/Tile"
  op: "Tile"
  input: "Postprocessor/ExpandDims"
  input: "Postprocessor/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Reshape"
  op: "Reshape"
  input: "Postprocessor/Tile"
  input: "Postprocessor/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/transpose"
  op: "Transpose"
  input: "Postprocessor/Reshape"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack"
  op: "Unpack"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub_1"
  op: "Sub"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack:2"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/mul_2"
  op: "Mul"
  input: "Postprocessor/Decode/truediv"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/mul_1"
  op: "Mul"
  input: "Postprocessor/Decode/Exp_1"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_6"
  op: "RealDiv"
  input: "Postprocessor/Decode/mul_1"
  input: "Postprocessor/Decode/truediv_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_4"
  op: "RealDiv"
  input: "Postprocessor/Decode/mul_1"
  input: "Postprocessor/Decode/truediv_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv"
  op: "RealDiv"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub_1"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/add"
  op: "AddV2"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/add"
  op: "AddV2"
  input: "Postprocessor/Decode/mul_2"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/add_2"
  op: "AddV2"
  input: "Postprocessor/Decode/add"
  input: "Postprocessor/Decode/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/sub"
  op: "Sub"
  input: "Postprocessor/Decode/add"
  input: "Postprocessor/Decode/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub"
  op: "Sub"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack:3"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/mul_3"
  op: "Mul"
  input: "Postprocessor/Decode/truediv_1"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/mul"
  op: "Mul"
  input: "Postprocessor/Decode/Exp"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_7"
  op: "RealDiv"
  input: "Postprocessor/Decode/mul"
  input: "Postprocessor/Decode/truediv_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/truediv_5"
  op: "RealDiv"
  input: "Postprocessor/Decode/mul"
  input: "Postprocessor/Decode/truediv_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv_1"
  op: "RealDiv"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/sub"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/get_center_coordinates_and_sizes/add_1"
  op: "AddV2"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/unstack:1"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/add_1"
  op: "AddV2"
  input: "Postprocessor/Decode/mul_3"
  input: "Postprocessor/Decode/get_center_coordinates_and_sizes/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/add_3"
  op: "AddV2"
  input: "Postprocessor/Decode/add_1"
  input: "Postprocessor/Decode/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/sub_1"
  op: "Sub"
  input: "Postprocessor/Decode/add_1"
  input: "Postprocessor/Decode/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/Decode/stack"
  op: "Pack"
  input: "Postprocessor/Decode/sub"
  input: "Postprocessor/Decode/sub_1"
  input: "Postprocessor/Decode/add_2"
  input: "Postprocessor/Decode/add_3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/Decode/transpose_1"
  op: "Transpose"
  input: "Postprocessor/Decode/stack"
  input: "Postprocessor/Decode/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Reshape_2"
  op: "Reshape"
  input: "Postprocessor/Decode/transpose_1"
  input: "Postprocessor/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/raw_box_locations"
  op: "Identity"
  input: "Postprocessor/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/ExpandDims_1"
  op: "ExpandDims"
  input: "Postprocessor/raw_box_locations"
  input: "Postprocessor/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/Squeeze"
  op: "Squeeze"
  input: "Postprocessor/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "raw_detection_boxes"
  op: "Identity"
  input: "Postprocessor/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "Postprocessor/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/Shape"
  op: "Shape"
  input: "Postprocessor/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less_1"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LogicalAnd"
  op: "LogicalAnd"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Less_1"
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  op: "LoopCond"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LogicalAnd"
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_1"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_1"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add_1/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add_1"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_1"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros/shape_as_tensor"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros/shape_as_tensor"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select/e"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select/t"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/concat/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split/split_dim"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Assert/Assert/data_0"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Incorrect field size: actual vs expected."
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Const_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/GreaterEqual/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_4/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split/split_dim"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Greater/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split/split_dim"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/concat/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split/split_dim"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Assert/Assert/data_0"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Incorrect field size: actual vs expected."
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_7/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_3/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_7/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_6/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/soft_nms_sigma"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/score_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/iou_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_3/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_3/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_3/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_5/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_2/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/soft_nms_sigma"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/score_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/iou_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_2/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_2/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_2/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_3/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_1/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_3/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_2/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/soft_nms_sigma"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/score_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/iou_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_1/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_1/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_1/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_1/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range/delta"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range/start"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_5/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_4/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_1/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat/axis"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Const"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/soft_nms_sigma"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/score_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1e-08
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/iou_threshold"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.6
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum/x"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack_2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack_1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_4/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_4/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_1/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_1/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape/shape"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice/begin"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack/2"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack/1"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add/y"
  op: "Const"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_6/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_8"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_8"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_8"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_8"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_8"
  op: "Exit"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Postprocessor/Cast_4"
  op: "Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_6/TensorArrayGatherV3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "num_detections"
  op: "Identity"
  input: "Postprocessor/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_8"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_5/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_7"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_7"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_7"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_7"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_7"
  op: "Exit"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 5
        }
      }
    }
  }
}
node {
  name: "detection_multiclass_scores"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_5/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_7"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_4"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_4"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_4"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_4"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_4"
  op: "Exit"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_2/TensorArrayGatherV3"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "detection_classes"
  op: "Identity"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_4"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_3"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_3"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_3"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_3"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_3"
  op: "Exit"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "detection_scores"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack_1/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_3"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_2"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_2"
  op: "Merge"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Enter_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_2"
  op: "Switch"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Merge_2"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_2"
  op: "Exit"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/TensorArraySizeV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "detection_boxes"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_2"
  op: "Identity"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_6"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_6"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_5"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_5"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/range"
  input: "Postprocessor/convert_scores"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/convert_scores"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_5/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5"
  op: "TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_3"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_3"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/range"
  input: "Postprocessor/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/stack_1"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_3/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  op: "TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_2/y"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_7"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_1"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1"
  op: "RealDiv"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv"
  op: "RealDiv"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack"
  op: "Unpack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_1"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_1"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/range"
  input: "Postprocessor/Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/Slice"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_1/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1"
  op: "TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray"
  op: "TensorArrayV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/range"
  input: "Postprocessor/ExpandDims_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/ExpandDims_1"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/Shape_1"
  op: "Shape"
  input: "Postprocessor/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/Shape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/Shape"
  op: "Shape"
  input: "Postprocessor/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/ones/packed"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/ones"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/ones/packed"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/mul"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/ones"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/Shape"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArray_6:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/mul"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6/Enter_1"
  op: "Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/TensorArrayUnstack_6/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6"
  op: "TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_4"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_4/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_4"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_4/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_1"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_1/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_3"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_3/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_3"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_3/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_3"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_2"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_2/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_2"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_2/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_2"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_1"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_1/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_1"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack/1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayReadV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice/begin"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  op: "Unpack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_7"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_3"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_3/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/NonMaxSuppressionV5"
  op: "NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/iou_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/score_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/soft_nms_sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pad_to_max_output_size"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_8"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/NonMaxSuppressionV5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_3"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_7"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_7"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/NonMaxSuppressionV5:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_7/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_3"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_3"
  op: "ZerosLike"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_7"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_6"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_6"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_3/NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_5"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_2"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_2/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/NonMaxSuppressionV5"
  op: "NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/iou_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/score_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/soft_nms_sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pad_to_max_output_size"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_6"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/NonMaxSuppressionV5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_2"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_5"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_5"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/NonMaxSuppressionV5:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_2"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_2"
  op: "ZerosLike"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_5"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_4"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_4"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_2/NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_3"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_1"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_1/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/NonMaxSuppressionV5"
  op: "NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/iou_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/score_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/soft_nms_sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pad_to_max_output_size"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_4"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/NonMaxSuppressionV5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_1"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_3"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_3"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/NonMaxSuppressionV5:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_1"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_1"
  op: "ZerosLike"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_3"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_2"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_2"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores_1/NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_1"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/NonMaxSuppressionV5"
  op: "NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/iou_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/score_threshold"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/soft_nms_sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pad_to_max_output_size"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_2"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/NonMaxSuppressionV5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less"
  op: "Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_1"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_1"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/NonMaxSuppressionV5:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Less"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Size"
  op: "Size"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like"
  op: "ZerosLike"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_1"
  op: "AddV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros_like"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_5"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/add_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression_with_scores/NonMaxSuppressionV5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/zeros"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/unstack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Shape"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal"
  op: "Equal"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Assert/Assert"
  op: "Assert"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Assert/Assert/data_0"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Size"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/TopKV2"
  op: "TopKV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/strided_slice"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_6"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split"
  op: "Split"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split/split_dim"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_3"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split:3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_3"
  op: "Maximum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_2"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_2"
  op: "Maximum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_1"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split:2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_1"
  op: "Maximum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/split"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum"
  op: "Maximum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/concat"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Maximum_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split"
  op: "Split"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split/split_dim"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/sub_1"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split:3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/sub"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split:2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/mul"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/Squeeze"
  op: "Squeeze"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Greater"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Area/Squeeze"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Where"
  op: "Where"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Greater"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Where"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Cast"
  op: "Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Reshape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/concat"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Shape"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split"
  op: "Split"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split/split_dim"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/sub_1"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split:3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/sub"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split:2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/mul"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/Squeeze"
  op: "Squeeze"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Cast"
  op: "Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Area/Squeeze"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_9"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Reshape"
  op: "Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4"
  op: "Fill"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Reshape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_4"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_4/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ones_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_1"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_1"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_4"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Size"
  op: "Size"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Equal"
  op: "Equal"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Assert/Assert"
  op: "Assert"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Equal"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Assert/Assert/data_0"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Size"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/TopKV2"
  op: "TopKV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/strided_slice"
  input: "^Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_6"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_2"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split"
  op: "Split"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split/split_dim"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_3"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_2"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_1"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul"
  op: "Mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/truediv"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/concat"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/mul_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_10"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Shape_10"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4"
  op: "Minimum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_6"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ChangeCoordinateFrame/Scale/concat"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_1"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_1"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/GreaterEqual"
  op: "GreaterEqual"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Cast_1"
  op: "Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Sum"
  op: "Sum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Cast_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Greater"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_5"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Sum"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Minimum_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_6/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_6/TensorArrayWriteV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_5"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_8"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_6/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5"
  op: "Range"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5/start"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Select_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_6"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_6/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice/size"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_6"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_1"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack/values_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad"
  op: "Pad"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_2"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_5"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_5/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_10"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_10"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_18"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_18"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_5/size"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_9"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_5"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_10"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_5/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_11"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_11"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_5/values_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_19"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_5"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_11"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_5/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_5"
  op: "Pad"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_2/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_5"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_4"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_2/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_1"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_2"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_1/size"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_1"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_3"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_1/values_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_5"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_1"
  op: "Pad"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_1"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_3"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Reshape_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/concat"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_4"
  op: "ConcatV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_1/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_2/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_3/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Concatenate/concat_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Gather/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Cast"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/ClipToWindow/Gather/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/TopKV2:1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField_1/Gather/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_4"
  op: "GatherV2"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_4/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/range_5"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_4/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_8"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_15"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_15"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_14"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7"
  op: "Greater"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_14"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7"
  op: "Select"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Greater_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7/t"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_4/size"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_7"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Select_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_4"
  op: "Slice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/Gather_5/GatherV2_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_8"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_4/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_9"
  op: "Shape"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16"
  op: "StridedSlice"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Shape_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16"
  op: "Sub"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16/x"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/strided_slice_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_4/values_1"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_16"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/sub_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_4"
  op: "Pack"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/zeros_9"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_4/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_4"
  op: "Pad"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Slice_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/stack_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_5/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_5/TensorArrayWriteV3/Enter"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_1"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_4"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Postprocessor/BatchMultiClassNonMaxSuppression/map/while/PadOrClipBoxList/Pad_4"
      }
    }
  }
}
node {
  name: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/NextIteration_7"
  op: "NextIteration"
  input: "Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_5/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/while/Identity_2"
  op: "Identity"
  input: "Preprocessor/map/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/TensorArray"
  op: "TensorArrayV3"
  input: "Preprocessor/map/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Preprocessor/map/TensorArray"
  attr {
    key: "T"
    value {
      type: 20
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Preprocessor/map/TensorArray"
  input: "Preprocessor/map/TensorArrayUnstack/range"
  input: "Cast"
  input: "Preprocessor/map/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Preprocessor/map/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Preprocessor/map/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Preprocessor/map/while/TensorArrayReadV3/Enter"
  input: "Preprocessor/map/while/Identity_1"
  input: "Preprocessor/map/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/resize/ExpandDims"
  op: "ExpandDims"
  input: "Preprocessor/map/while/TensorArrayReadV3"
  input: "Preprocessor/map/while/ResizeImage/resize/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/resize/ResizeBilinear"
  op: "ResizeBilinear"
  input: "Preprocessor/map/while/ResizeImage/resize/ExpandDims"
  input: "Preprocessor/map/while/ResizeImage/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "Preprocessor/map/while/ResizeImage/resize/Squeeze"
  op: "Squeeze"
  input: "Preprocessor/map/while/ResizeImage/resize/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Preprocessor/map/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Preprocessor/map/while/Identity_1"
  input: "Preprocessor/map/while/ResizeImage/resize/Squeeze"
  input: "Preprocessor/map/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Preprocessor/map/while/ResizeImage/resize/Squeeze"
      }
    }
  }
}
node {
  name: "Preprocessor/map/while/NextIteration_2"
  op: "NextIteration"
  input: "Preprocessor/map/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
